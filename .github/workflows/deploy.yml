name: Deploy Django to GCP COS VM

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: django-app
  REGION: ${{ secrets.GCP_REGION }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REPO: app-repo
  AR_HOST: ${{ secrets.GCP_REGION }}-docker.pkg.dev
  IMAGE_TAG: ${{ github.sha }}
  FULL_IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-repo/django-app:${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 0) 先驗證必要 Secrets 都存在，缺哪個就直接失敗並提示
      - name: Validate required secrets
        run: |
          test -n "${{ secrets.GCP_PROJECT_ID }}"  || { echo "Missing GCP_PROJECT_ID"; exit 1; }
          test -n "${{ secrets.GCP_REGION }}"      || { echo "Missing GCP_REGION"; exit 1; }
          test -n "${{ secrets.GCP_SA_KEY }}"      || { echo "Missing GCP_SA_KEY"; exit 1; }
          test -n "${{ secrets.VM_HOST }}"         || { echo "Missing VM_HOST"; exit 1; }
          test -n "${{ secrets.VM_USER }}"         || { echo "Missing VM_USER"; exit 1; }
          test -n "${{ secrets.SSH_PRIVATE_KEY }}" || { echo "Missing SSH_PRIVATE_KEY"; exit 1; }

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.AR_HOST }}

      - name: Build Docker image
        run: docker build -t $FULL_IMAGE .

      - name: Push image to Artifact Registry
        run: docker push $FULL_IMAGE

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VM to known hosts
        run: ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      # 將 SA 金鑰寫成檔案並複製到 VM
      - name: Upload SA key to VM
        run: |
          printf "%s" '${{ secrets.GCP_SA_KEY }}' > ar_key.json
          scp -q ar_key.json ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/tmp/ar_key.json
          rm -f ar_key.json

      # 在 VM 上登入 Artifact Registry、拉 image、重啟容器
      - name: Remote deploy on VM
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << EOF
          set -euxo pipefail

          # 1) 用 _json_key 登入 Artifact Registry（COS 不需 gcloud）
          sudo docker logout ${{ secrets.GCP_REGION }}-docker.pkg.dev || true
          sudo docker login -u _json_key --password-stdin ${{ secrets.GCP_REGION }}-docker.pkg.dev < /tmp/ar_key.json

          # 2) 拉最新 image
          sudo docker pull ${{ env.FULL_IMAGE }}

          # 3) 停舊容器（若存在）
          sudo docker stop django-app || true
          sudo docker rm django-app || true

          # 4) 跑新容器（依需要調整埠/環境變數/volume）
          sudo docker run -d --name django-app \
            -p 8080:8080 \
            --restart=always \
            ${{ env.FULL_IMAGE }}

          # 5) 清理
          rm -f /tmp/ar_key.json
          EOF
